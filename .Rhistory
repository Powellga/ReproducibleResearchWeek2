data1 <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable Research/Week 2/activity.csv")
quit
library(data.table)
quit
data1 <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable Research/Week 2/activity.csv")
library(data.table)
data1 <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable Research/Week 2/activity.csv")
library(data.table)
data1 <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable_Research/Week2/peer_assignmentactivity.csv")
data1 <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable_Research/Week2/peer_assignment/activity.csv")
data_no_NA <- data[!(is.na(data$steps) | data$steps==""), ]
#calculate the number of steps and print
mean_steps <- mean(data_no_NA$steps)
mean_steps
data1 <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable_Research/Week2/peer_assignment/activity.csv")
#remove all rows with NA or with "" (nothing)
data_no_NA <- data[!(is.na(data$steps) | data$steps==""), ]
data <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable_Research/Week2/peer_assignment/activity.csv")
#remove all rows with NA or with "" (nothing)
data_no_NA <- data[!(is.na(data$steps) | data$steps==""), ]
#calculate the number of steps and print
mean_steps <- mean(data_no_NA$steps)
mean_steps
rm(data1)
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=mean(steps)), stat= "identity", fill = "lightblue4", width = 0.5)
library(ggplot2)
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=mean(steps)), stat= "identity", fill = "lightblue4", width = 0.5)
histo_steps
factor(date)
factor(data_no_NA$date)
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=steps), stat= "identity", fill = "lightblue4", width = 0.5)
histo_steps
knitr::opts_chunk$set(echo = TRUE)
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=mean(steps)), stat= "identity", fill = "lightblue4", width = 0.5) +
theme(axis.text.x = element_text(angle = 90))
histo_steps
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=mean(steps)), stat= "identity", fill = "lightblue4", width = 0.5) +
theme(axis.text.x = element_text(angle = 90))
histo_steps
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=mean(steps)), stat= "identity", fill = "blue4", width = 0.5) +
theme(axis.text.x = element_text(angle = 90))
histo_steps
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=mean(steps)), stat= "identity", fill = "blue", width = 0.5) +
theme(axis.text.x = element_text(angle = 90))
histo_steps
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=steps), stat= "identity", fill = "blue", width = 0.5) +
theme(axis.text.x = element_text(angle = 90))
histo_steps
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=steps), stat= "identity", fill = "blue", width = 0.5) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Total Steps Each Day", color="red") + labs(title = "Total Steps Taken Each Day")
histo_steps
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=steps), stat= "identity", fill = "blue", width = 0.5) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Total Steps") + labs(title = "Total Steps Taken Each Day")
histo_steps
MeanMedian_steps <- ggplot(data=data_no_NA) +
geom_line(aes(x=factor(date), y=mean(steps))) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Total Steps") + labs(title = "Total Steps Taken Each Day")
MeanMedian_steps
MeanMedian_steps <- ggplot(data=data_no_NA) +
geom_line(aes(x=factor(date), y=mean(steps))) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Average Steps") + labs(title = "Average and Median Steps Taken Each Day")
MeanMedian_steps
MeanMedian_steps <- ggplot(data=data_no_NA) +
geom_line(aes(x=factor(date), y=mean(steps)), color="black") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Average Steps") + labs(title = "Average and Median Steps Taken Each Day")
MeanMedian_steps
MeanMedian_steps <- ggplot(data=data_no_NA) +
geom_point(aes(x=factor(date), y=mean(steps)), color="black") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Average Steps") + labs(title = "Average and Median Steps Taken Each Day")
MeanMedian_steps
library(dplyr)
data_no_NA %>% group_by(date) %>% mean(steps)
data_no_NA %>% as.factor(steps) %>% group_by(date) %>% mean(steps)
data_no_NA$steps <- as.numeric(data_no_NA$steps)
data_no_NA %>% group_by(date) %>% mean(steps)
data_no_NA %>% group_by(date) %>% mean(steps)
data_no_NA %>% group_by(date) %>% summarise(mean(steps))
mean_steps_table <-data_no_NA %>% group_by(date) %>% summarise(mean(steps))
MeanMedian_steps <- ggplot(mean_steps_table) +
geom_point(aes(x=factor(date), y=dbl), color="black") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Average Steps") + labs(title = "Average and Median Steps Taken Each Day")
MeanMedian_steps
MeanMedian_steps <- ggplot(mean_steps_table) +
geom_bar(aes(x=factor(date), y=dbl), color="black") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Average Steps") + labs(title = "Average and Median Steps Taken Each Day")
MeanMedian_steps
View(MeanMedian_steps)
View(mean_steps_table)
colnames(mean_steps_table)[2] <- "MeanSteps"
View(mean_steps_table)
MeanMedian_steps <- ggplot(mean_steps_table) +
geom_bar(aes(x=factor(date), y=MeanSteps), color="black") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Average Steps") + labs(title = "Average and Median Steps Taken Each Day")
MeanMedian_steps
MeanMedian_steps <- ggplot(mean_steps_table) +
geom_bar(aes(x=date, y=MeanSteps), color="black") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Average Steps") + labs(title = "Average and Median Steps Taken Each Day")
MeanMedian_steps
mean_steps_table <-data_no_NA %>% group_by(date) %>% summarise(mean(steps), median(steps))
View(mean_steps_table)
median mean_steps_table$steps
median(mean_steps_table$steps)
mean(mean_steps_table$steps)
mean_steps_table <-data_no_NA %>% group_by(date) %>% summarise(mean(steps), median(steps))
View(mean_steps_table)
mean_steps_table <-data_no_NA %>% group_by(date) %>% summarise(mean(steps), median(steps))
colnames(mean_steps_table)[2] <- "MeanSteps"
colnames(mean_steps_table)[3] <- "MedianSteps"
mean_steps_table
data_no_NA$steps <- as.numeric(data_no_NA$steps)
mean_steps_table <- data_no_NA %>% group_by(date) %>% summarise(mean(steps), median(steps))
colnames(mean_steps_table)[2] <- "MeanSteps"
colnames(mean_steps_table)[3] <- "MedianSteps"
mean_steps_table
mean_steps_table <- data_no_NA %>% group_by(date) %>% summarise(mean(steps)) %>% summarise(median(steps))
data_no_NA$steps <- as.numeric(data_no_NA$steps)
mean_steps_table <- data_no_NA %>% group_by(date) %>% summarise(mean(steps)) %>% summarise(median(steps))
data <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable_Research/Week2/peer_assignment/activity.csv")
#remove all rows with NA or with "" (nothing)
data_no_NA <- data[!(is.na(data$steps) | data$steps==""), ]
data_no_NA$steps <- as.numeric(data_no_NA$steps)
mean_steps_table <- data_no_NA %>% group_by(date) %>% summarise(mean(steps)) %>% summarise(median(steps))
mean_steps_table
#remove all rows with NA or with "" (nothing)
data_no_NA <- data[!(is.na(data$steps) | data$steps==""), ]
View(data_no_NA)
data <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable_Research/Week2/peer_assignment/activity.csv")
View(data)
#remove all rows with NA or with "" (nothing)
data_no_NA <- data[!(is.na(data$steps) | data$steps==""), ]
View(data_no_NA)
View(data)
#calculate the number of steps and print
mean_steps <- mean(data_no_NA$steps)
mean_steps
histo_steps <- ggplot(data=data_no_NA) +
geom_bar(aes(x=factor(date), y=steps), stat= "identity", fill = "blue", width = 0.5) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Total Steps") + labs(title = "Total Steps Taken Each Day")
histo_steps
data_no_NA$steps <- as.numeric(data_no_NA$steps)
mean_steps_table <- data_no_NA %>% group_by(date) %>% summarise(mean(steps)) %>% summarise(median(steps))
mean_steps_table <- data_no_NA %>% group_by(date) %>% summarise(mean(steps)) )
mean_steps_table <- data_no_NA %>% group_by(date) %>% summarise(mean(steps)))
mean_steps_table <- data_no_NA %>% group_by(date) %>% summarise(mean(steps))
colnames(mean_steps_table)[2] <- "MeanSteps"
colnames(mean_steps_table)[3] <- "MedianSteps"
mean_steps_table
median(data_no_NA$steps)
mean_steps_table <- data_no_NA %>% group_by(date) %>% summarise(mean(steps), median(steps))
colnames(mean_steps_table)[2] <- "MeanSteps"
colnames(mean_steps_table)[3] <- "MedianSteps"
mean_steps_table
#strangly, the median number of steps is in fact 0 -
#doublecheck median steps:
median(data_no_NA$steps)
View(data_no_NA)
labs(x = "Date") + labs(y = "Total Steps") + labs(title = "Total Steps Taken Each Day")
geom_point(aes(x=interval, y=steps) +
time_plot
labs(x = "Date") + labs(y = "Total Steps") + labs(title = "Total Steps Taken Each Day")
geom_point(aes(x=interval, y=steps)
time_plot
time_plot <- ggplot(data=data_no_NA) +
geom_point(aes(x=interval, y=steps))
time_plot
time_plot <- ggplot(data=data_no_NA) +
geom_line(aes(x=interval, y=steps))
time_plot
avg_daily_activity_pattern <- data_no_NA %>% group_by(interval) %>% summarise(mean(steps))
View(avg_daily_activity_pattern)
time_plot <- ggplot(avg_daily_activity_pattern) +
geom_line(aes(x=interval, y=MeanSteps))
time_plot
time_plot <- ggplot(avg_daily_activity_pattern) +
geom_line(aes(x=interval, y=MeanSteps))
time_plot <- ggplot(avg_daily_activity_pattern) +
geom_line(aes(x=interval, y=MeanSteps)) +
geom_line(color = "#00AFBB", size = 2)
time_plot
View(avg_daily_activity_pattern)
colnames(avg_daily_activity_pattern)[2] <- "MeanSteps"
View(avg_daily_activity_pattern)
time_plot <- ggplot(avg_daily_activity_pattern) +
geom_line(aes(x=interval, y=MeanSteps)) +
geom_line(color = "#00AFBB", size = 2)
time_plot
time_plot <- ggplot(avg_daily_activity_pattern) +
geom_line(aes(x=interval, y=MeanSteps)) +
geom_line(color = "#00AFBB", size = 2)
time_plot
time_plot <- ggplot(data=avg_daily_activity_pattern) +
geom_line(aes(x=interval, y=MeanSteps)) +
geom_line(color = "#00AFBB", size = 2)
time_plot
time_plot <- ggplot(data=avg_daily_activity_pattern) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 2)
time_plot
time_plot <- ggplot(data=avg_daily_activity_pattern) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1)
time_plot
time_plot <- ggplot(data=avg_daily_activity_pattern) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval ")
time_plot
sorted_avg_daily_activity_pattern <- (avg_daily_activity_pattern, decreasing=TRUE)
sorted_avg_daily_activity_pattern <- sort(avg_daily_activity_pattern, decreasing=TRUE)
?sort
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern %>% arrange(interval)
View(sorted_avg_daily_activity_pattern)
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern %>% arrange(MeanStep)
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern %>% arrange(MeanStep)
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern %>% arrange(MeanStep)
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern %>% arrange(MeanStep)
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern[order(MeanStep)]
View(avg_daily_activity_pattern)
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern[order(MeanSteps)]
View(avg_daily_activity_pattern)
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern[order(MeanSteps)]
avg_daily_activity_pattern[order(MeanSteps)]
View(sorted_avg_daily_activity_pattern)
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern[order(MeanSteps)]
sorted_avg_daily_activity_pattern <- arrange(avg_daily_activity_pattern, MeanSteps)
sorted_avg_daily_activity_pattern
?arrange
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern[order(avg_daily_activity_pattern$MeanSteps)]
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern[order(avg_daily_activity_pattern$MeanSteps),]
sorted_avg_daily_activity_pattern
sorted_avg_daily_activity_pattern <- avg_daily_activity_pattern[order(-avg_daily_activity_pattern$MeanSteps),]
sorted_avg_daily_activity_pattern
sorted_avg_daily_activity_pattern[interval,]
sorted_avg_daily_activity_pattern[,interval]
sorted_avg_daily_activity_pattern[,1]
sorted_avg_daily_activity_pattern[1,1]
sorted_avg_daily_activity_pattern
count(data)
View(data)
count(is.na(data$steps))
is.na(data$steps)
sum(is.na(data))
sum(is.na(data$steps))
sum(is.na(data$interval))
sum(is.na(data$interval))
sum(is.na(data$date))
sum(is.na(data$steps))
#remove all rows with NA or with "" (nothing)
data_0 <- data[is.na(data)] <- 0
#remove all rows with NA or with "" (nothing)
data_0 <- data[is.na(data)]
View(data)
data <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable_Research/Week2/peer_assignment/activity.csv")
View(data)
data[is.na(data)] <- 0
View(data)
data <- fread("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable_Research/Week2/peer_assignment/activity.csv")
#before:
head(data)
data_noZ <- data
#before:
head(data_noZ)
#replace all NAs with 0
data_noZ[is.na(data_noZ)] <- 0
#after:
head(data_noZ)
View(data_noZ)
histo_steps2 <- ggplot(data=data_noZ) +
geom_bar(aes(x=factor(date), y=steps), stat= "identity", fill = "blue", width = 0.5) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Date") + labs(y = "Total Steps") + labs(title = "Total Steps Taken Each Day")
histo_steps2
#sets the data_no_NA$steps variable as numeric
data_noZ$steps <- as.numeric(data_noZ$steps)
#creates a new table  from the data_no_NA data.table that finds the median and average steps grouped by date using dplyr
mean_steps_table_noZ <- data_noZ %>% group_by(date) %>% summarise(mean(steps), median(steps))
colnames(mean_steps_table_noZ)[2] <- "MeanSteps"
colnames(mean_steps_table_noZ)[3] <- "MedianSteps"
mean_steps_table_noZ
#creates a new table  from the data_no_NA data.table that finds the median and average steps grouped by date using dplyr
mean_steps_table_noZ <- data_noZ %>% group_by(date) %>% summarise(mean(steps))
colnames(mean_steps_table_noZ)[2] <- "MeanSteps"
mean_steps_table_noZ
View(data_noZ)
merged_noNA_noZ <- merge(data_no_NA, data_noZ, date)
merged_noNA_noZ <- merge(data_no_NA, data_noZ, by.x = date)
merged_noNA_noZ <- merge(data_no_NA, data_noZ, by.x="date", by.y="date")
count(data_no_NA)
count(data_noZ)
merged_noNA_noZ <- merge(data_no_NA, data_noZ, by.x="date", by.y="date", all=TRUE)
merged_noNA_noZ <- merge(data_no_NA, data_noZ, all=TRUE)
View(merged_noNA_noZ)
merged_noNA_noZ <- merge(data_noz, data_no_NA, by.x="date", by.y="date")
merged_noNA_noZ <- merge(data_noZ, data_no_NA, by.x="date", by.y="date")
merged_noNA_noZ <- merge(data_noZ, data_no_NA, by.EACHI)
merged_noNA_noZ <- merge(data_noZ, data_no_NA, by.EACH)
merged_noNA_noZ <- merge(data_noZ, data_no_NA)
View(merged_noNA_noZ)
mean_steps_table_noZ
mean_steps_table_noZ
mean_steps_table
data_no_NAs$weekday <- weekdays(data_no_NAs$date)
data_no_NA$weekday <- weekdays(data_no_NA$date)
View(data_no_NA)
daya_no_NA$weekend <- ifelse(data_no_NA$weekday == "Saturday" | data_no_NA$weekday == "Sunday", 1, 0)
data_no_NA$weekend <- ifelse(data_no_NA$weekday == "Saturday" | data_no_NA$weekday == "Sunday", 1, 0)
View(data_no_NA)
#create another column in data_no_NA called "weekend". Test each value in weekday - it weekday is a saturday or sunday, then weekend is 1, else 0
data_no_NA$weekend <- ifelse(data_no_NA$weekday == "Saturday" | data_no_NA$weekday == "Sunday", "weekend", "weekday")
View(merged_noNA_noZ)
View(data_no_NA)
View(data_no_NA)
data_no_steps_day <- data_no_NA %>% group_by(weekend) %>% summarise(mean(steps))
colnames(data_no_steps_day)[2] <- "MeanSteps"
data_no_steps_day
?subset
data_no_NA_weekend <- subset(data_no_NA, data_no_NA$weekday == "Saturday" | data_no_NA$weekday)
data_no_NA_weekend <- subset(data_no_NA, data_no_NA$weekday == "Saturday" | data_no_NA$weekday == "Sunday")
View(data_no_NA_weekend)
data_no_NA_weekday <- subset(data_no_NA, !data_no_NA$weekday == "Saturday" & !data_no_NA$weekday == "Sunday")
View(data_no_NA_weekday)
####
avg_daily_activity_pattern_weekend <- data_no_NA_weekend %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekend)[2] <- "MeanSteps"
####
avg_daily_activity_pattern_weekend <- data_no_NA_weekend %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekend)[2] <- "MeanSteps"
time_plot_weekend <- ggplot(data=avg_daily_activity_pattern_weekend) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekend)")
time_plot_weekend
####Weekday
avg_daily_activity_pattern_weekday <- data_no_NA_weekday %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekday)[2] <- "MeanSteps"
time_plot_weekday <- ggplot(data=avg_daily_activity_pattern_weekday) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekday)")
time_plot_weekday
par(mfrow=c(2,1))
time_plot_weekend
time_plot_weekday
par(mfrow=c(2,1))
time_plot_weekend
time_plot_weekday
par(mfrow=c(2,1))
time_plot_weekend
time_plot_weekday
par(mfrow=c(2,1))
####Weekend
avg_daily_activity_pattern_weekend <- data_no_NA_weekend %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekend)[2] <- "MeanSteps"
time_plot_weekend <- ggplot(data=avg_daily_activity_pattern_weekend) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekend)")
time_plot_weekend
####Weekday
avg_daily_activity_pattern_weekday <- data_no_NA_weekday %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekday)[2] <- "MeanSteps"
time_plot_weekday <- ggplot(data=avg_daily_activity_pattern_weekday) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekday)")
time_plot_weekday
multiplot()
library(multiplot)
multiplot(time_plot_weekend, time_plot_weekday)
multiplot(time_plot_weekend, time_plot_weekday, cols=2)
library(ggplot2)
time_plot_weekday
time_plot_weekday
multiplot(time_plot_weekend, time_plot_weekday, cols=2)
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(time_plot_weekend, time_plot_weekday, cols=2)
multiplot(time_plot_weekend, time_plot_weekday, cols=2)
multiplot(time_plot_weekend, time_plot_weekday, cols=1)
ata_no_NA_weekend <- subset(data_no_NA, data_no_NA$weekday == "Saturday" | data_no_NA$weekday == "Sunday")
data_no_NA_weekday <- subset(data_no_NA, !data_no_NA$weekday == "Saturday" & !data_no_NA$weekday == "Sunday")
####Weekend
avg_daily_activity_pattern_weekend <- data_no_NA_weekend %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekend)[2] <- "MeanSteps"
time_plot_weekend <- ggplot(data=avg_daily_activity_pattern_weekend) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekend)")
####Weekday
avg_daily_activity_pattern_weekday <- data_no_NA_weekday %>% group_by(interval) %>% summarise(mean(steps))
time_plot_weekday <- ggplot(data=avg_daily_activity_pattern_weekday) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekday)")
multiplot(time_plot_weekend, time_plot_weekday, cols=1)
###Weekend
avg_daily_activity_pattern_weekend <- data_no_NA_weekend %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekend)[2] <- "MeanSteps"
time_plot_weekend <- ggplot(data=avg_daily_activity_pattern_weekend) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekend)")
####Weekday
avg_daily_activity_pattern_weekday <- data_no_NA_weekday %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekday)[2] <- "MeanSteps"
time_plot_weekday <- ggplot(data=avg_daily_activity_pattern_weekday) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekday)")
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(time_plot_weekend, time_plot_weekday, cols=1)
#create a new column in data_no_NA called "weekday" and use it to show which date was on what day
data_no_NA$weekday <- weekdays(data_no_NA$date)
#create another column in data_no_NA called "weekend". Test each value in weekday - it weekday is a saturday or sunday, then weekend is 1, else 0
data_no_NA$weekend <- ifelse(data_no_NA$weekday == "Saturday" | data_no_NA$weekday == "Sunday", "weekend", "weekday")
########################################################################
#creates two new data tables - one for weekdays and the other weekends
data_no_NA_weekend <- subset(data_no_NA, data_no_NA$weekday == "Saturday" | data_no_NA$weekday == "Sunday")
data_no_NA_weekday <- subset(data_no_NA, !data_no_NA$weekday == "Saturday" & !data_no_NA$weekday == "Sunday")
########################################################################
####Weekend
avg_daily_activity_pattern_weekend <- data_no_NA_weekend %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekend)[2] <- "MeanSteps"
time_plot_weekend <- ggplot(data=avg_daily_activity_pattern_weekend) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekend)")
####Weekday
avg_daily_activity_pattern_weekday <- data_no_NA_weekday %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekday)[2] <- "MeanSteps"
time_plot_weekday <- ggplot(data=avg_daily_activity_pattern_weekday) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekday)")
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(time_plot_weekend, time_plot_weekday, cols=1)
#create a new column in data_no_NA called "weekday" and use it to show which date was on what day
data_no_NA$weekday <- weekdays(data_no_NA$date)
#create another column in data_no_NA called "weekend". Test each value in weekday - it weekday is a saturday or sunday, then weekend is 1, else 0
data_no_NA$weekend <- ifelse(data_no_NA$weekday == "Saturday" | data_no_NA$weekday == "Sunday", "weekend", "weekday")
colnames(avg_daily_activity_pattern_weekend)[2] <- "MeanSteps"
time_plot_weekend <- ggplot(data=avg_daily_activity_pattern_weekend) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekend)")
####Weekday
avg_daily_activity_pattern_weekday <- data_no_NA_weekday %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekday)[2] <- "MeanSteps"
time_plot_weekday <- ggplot(data=avg_daily_activity_pattern_weekday) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekday)")
multiplot(time_plot_weekend, time_plot_weekday, cols=1)
#sets the data_no_NA$steps variable as numeric
data_noZ$steps <- as.numeric(data_noZ$steps)
#creates a new table  from the data_no_NA data.table that finds the median and average steps grouped by date using dplyr
mean_steps_table_noZ <- data_noZ %>% group_by(date) %>% summarise(mean(steps), median(steps))
colnames(mean_steps_table_noZ)[2] <- "MeanSteps"
colnames(mean_steps_table_noZ)[3] <- "MedianSteps"
mean_steps_table_noZ
#compare before and after:
head(mean_steps_table)
head(mean_steps_table_noZ)
#just removed the 0s
####Weekend
avg_daily_activity_pattern_weekend <- data_no_NA_weekend %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekend)[2] <- "MeanSteps"
time_plot_weekend <- ggplot(data=avg_daily_activity_pattern_weekend) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekend)")
####Weekday
avg_daily_activity_pattern_weekday <- data_no_NA_weekday %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekday)[2] <- "MeanSteps"
time_plot_weekday <- ggplot(data=avg_daily_activity_pattern_weekday) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekday)")
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(time_plot_weekend, time_plot_weekday, cols=1)
#create a new column in data_no_NA called "weekday" and use it to show which date was on what day
data_no_NA$weekday <- weekdays(data_no_NA$date)
#create another column in data_no_NA called "weekend". Test each value in weekday - it weekday is a saturday or sunday, then weekend is 1, else 0
data_no_NA$weekend <- ifelse(data_no_NA$weekday == "Saturday" | data_no_NA$weekday == "Sunday", "weekend", "weekday")
####Weekend
avg_daily_activity_pattern_weekend <- data_no_NA_weekend %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekend)[2] <- "MeanSteps"
time_plot_weekend <- ggplot(data=avg_daily_activity_pattern_weekend) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekend)")
####Weekday
avg_daily_activity_pattern_weekday <- data_no_NA_weekday %>% group_by(interval) %>% summarise(mean(steps))
colnames(avg_daily_activity_pattern_weekday)[2] <- "MeanSteps"
time_plot_weekday <- ggplot(data=avg_daily_activity_pattern_weekday) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekday)")
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(time_plot_weekend, time_plot_weekday, cols=1)
View(data_no_NA_weekend)
colnames(avg_daily_activity_pattern_weekend)[2] <- "MeanSteps"
time_plot_weekend <- ggplot(data=avg_daily_activity_pattern_weekend) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekend)")
colnames(avg_daily_activity_pattern_weekday)[2] <- "MeanSteps"
time_plot_weekday <- ggplot(data=avg_daily_activity_pattern_weekday) +
geom_line(aes(x=interval, y=MeanSteps), color = "#00AFBB", size = 1) +
labs(x = "5-min Interval") + labs(y = "Average Steps") + labs(title = "Average Daily Steps Taken during each 5-min Interval (Weekday)")
multiplot(time_plot_weekend, time_plot_weekday, cols=1)
setwd("C:/_TEMP/_R_WORK_TEMP/Johns_Hopkins_Data_Science/Module 5-Reproducable_Research/Week2/peer_assignment/")
